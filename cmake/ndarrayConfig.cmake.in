# get_filename_component(NDARRAY_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)
include("${CMAKE_CURRENT_LIST_DIR}/ndarrayTargets.cmake") 

list (INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}")

set (NDARRAY_HAVE_ADIOS2 @NDARRAY_HAVE_ADIOS2@)
set (NDARRAY_HAVE_CUDA @NDARRAY_HAVE_CUDA@)
set (NDARRAY_HAVE_GMP @NDARRAY_HAVE_GMP@)
set (NDARRAY_HAVE_HDF5 @NDARRAY_HAVE_HDF5@)
set (NDARRAY_HAVE_METIS @NDARRAY_HAVE_METIS@)
set (NDARRAY_HAVE_MPI @NDARRAY_HAVE_MPI@)
set (NDARRAY_HAVE_NETCDF @NDARRAY_HAVE_NETCDF@)
set (NDARRAY_HAVE_VTK @NDARRAY_HAVE_VTK@)

find_dependency (yaml-cpp REQUIRED)

if (NDARRAY_HAVE_ADIOS2)
  find_dependency (ADIOS2 REQUIRED)
endif ()

if (NDARRAY_HAVE_CUDA)
  enable_language (CUDA)
endif ()

if (NDARRAY_HAVE_VTK)
  find_dependency (VTK @VTK_MAJOR_VERSION@.@VTK_MINOR_VERSION@ REQUIRED)
endif ()

if (NDARRAY_HAVE_METIS)
  find_dependency (METIS REQUIRED)
endif ()

if (NDARRAY_HAVE_MPI)
  find_dependency (MPI REQUIRED)
  include_directories (${MPI_C_INCLUDE_PATH})
endif ()

if (NDARRAY_HAVE_HDF5)
  find_dependency (HDF5 REQUIRED) 
  include_directories (${HDF5_INCLUDE_DIRS})
endif ()

if (NDARRAY_HAVE_NETCDF)
  find_dependency (netCDF REQUIRED)
  include_directories (${netCDF_INCLUDE_DIR})
endif ()

set (NDARRAY_INCLUDE_DIR "@NDARRAY_INCLUDE_DIR@")
include_directories (${NDARRAY_INCLUDE_DIR})

# set (NDARRAY_FOUND 1)
# set (NDARRAY_LIBRARY "@NDARRAY_LIBRARY@")
